<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Administrar Solicitudes</title>
    <link rel="stylesheet" href="{{ asset('css/selector.css') }}">
    <link rel="stylesheet" href="{{ asset('css/administrar_solicitudes.css') }}">
    <link rel="stylesheet" href="{{ asset('css/buscador.css') }}">
    <link rel="stylesheet" href="{{ asset('css/boton_imprimir.css') }}">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <!-- Agrega Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
</head>
<body>
    {% include 'cabecera.html.twig' %}
    {% if is_granted('ROLE_ADMIN') %}
    <div id="contenedor_principal">
    {# Botones prinipales #}
            <button type="button" class="boton_tabla botones-top" id="aceptar_seleccionados">Aceptar seleccionados</button>
            <button type="button" class="boton_tabla botones-top" id="denegar_seleccionados">Denegar seleccionados</button> 
            <button type="button" class="boton_tabla botones-top" id="aceptar_devoluciones">Confirmar devoluciones</button>
            <button type="button" class="boton_tabla" id="seleccionar_todos">Seleccionar todo</button>
    {# Selector de estados para filtrar #}
            <div class="selector_estados">
                <select>
                    <option selected value="0">TODOS</option>
                    <option value="1">ACEPTADO</option>
                    <option value="2">DENEGADO</option>
                    <option value="3">EN ESPERA</option>
                    <option value="4">ESPERA DEVOLUCION</option>
                    <option value="5">DEVUELTO</option>
                </select>
            </div>
    {# Botón imprimir #}
            <button class="download-button" id="boton-imprimir">
                <div class="docs">
                    <svg
                    viewBox="0 0 24 24"
                    width="20"
                    height="20"
                    stroke="currentColor"
                    stroke-width="2"
                    fill="none"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="css-i6dzq1"
                    >
                    <path
                        d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"
                    ></path>
                    <polyline points="14 2 14 8 20 8"></polyline>
                    <line x1="16" y1="13" x2="8" y2="13"></line>
                    <line x1="16" y1="17" x2="8" y2="17"></line>
                    <polyline points="10 9 9 9 8 9"></polyline>
                    </svg>
                    {# Los textos van aquí #}
                </div>
                <div class="download">
                    <svg
                    viewBox="0 0 24 24"
                    width="24"
                    height="24"
                    stroke="currentColor"
                    stroke-width="2"
                    fill="none"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    class="css-i6dzq1"
                    >
                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                    <polyline points="7 10 12 15 17 10"></polyline>
                    <line x1="12" y1="15" x2="12" y2="3"></line>
                    </svg>
                </div>
            </button>
            {# Buscador de eventos #}
            <div class="search-box">
                <button class="btn-search"><i class="fas fa-search"></i></button>
                <input type="text" class="input-search" placeholder="Filtra por evento...">
            </div>
        <div>
            {# Empieza la tabla #}
            <table>
                <thead>
                    <tr>
                        <th scope="col">Seleccionar</th>
                        <th scope="col">Id solicitud</th>
                        <th scope="col">Nombre del producto</th>
                        <th scope="col">Cantidad</th>
                        <th scope="col">Fecha préstamo</th>
                        <th scope="col">Fecha devolución</th>
                        <th scope="col">Usuario solicitante</th>
                        <th scope="col">Evento</th>
                        <th scope="col">Estado</th>
                        <th scope="col">Prestamista</th>
                        <th scope="col">Modificar</th>
                    </tr>
                </thead>
                <tbody>
                    {% for prestamo in prestamos %}
                        <tr>
                            <td><input type="checkbox" class="checkbox-producto" data-id="{{ prestamo.idPrestamo }}"></td>
                            <td>{{ prestamo.idPrestamo }}</td>
                            <td>{{ prestamo.codProducto.nombre }}</td>
                            <td>{{ prestamo.cantidad }}</td>
                            <td>{{ prestamo.fechaPrestamo|date('d-m-Y') }}</td>
                            <td class="fecha-devolucion" data-fecha="{{ prestamo.fechaDevolucion|date('Y-m-d') }}">
                                {{ prestamo.fechaDevolucion|date('d-m-Y') }}
                            </td>
                            <td>{{ prestamo.usuarioPrestamo.email }}</td>
                            <td>
                                {% if prestamo.evento is null %}
                                    -
                                {% else %}
                                    {{prestamo.evento}}
                                {% endif %}
                            </td>
                            <td>{{ prestamo.estado }}</td>
                            <td>
                                {% if prestamo.emailPrestamista is null %}
                                    -
                                {% else %}
                                    {{prestamo.emailPrestamista}}
                                {% endif %}
                            </td>
                            <td>
                                <form action="{{ path('dirigir_a_editar') }}" method="POST">
                                    {# Inputs ocultos para extraer valores necesarios #}
                                    <input type="hidden" name="sn" value="{{ prestamo.codProducto.sn }}" id="sn">
                                    <input type="hidden" name="id_prestamo" value="{{ prestamo.idPrestamo }}" id="id_prestamo">
                                    <button type="submit" class="boton_tabla">Modificar</button>
                                </form>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>    
    </div>
    {% endif %}
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function() {
            // Evento de tecla al escribir en la caja de búsqueda
            $('.input-search').on('keyup', function() {
                let searchQuery = $(this).val().toLowerCase();

                // Iterar sobre las filas de la tabla
                $('tbody tr').each(function() {
                    const nombreProducto = $(this).find("td:eq(7)").text().toLowerCase(); // Asume que el nombre del producto está en la columna 2 (índice 1)
                    
                    // Si el nombre contiene la búsqueda, mostrar la fila. Si no, ocultarla.
                    if (nombreProducto.includes(searchQuery)) {
                        $(this).css('display', '');  // Mostrar (restablecer a su valor predeterminado)
                    } else {
                        $(this).css('display', 'none');  // Ocultar la fila completamente
                    }
                });
            });

            // Cambiar color de texto de la fecha de devolución
            $('.fecha-devolucion').each(function() {
                const fechaDevolucion = new Date($(this).data('fecha'));
                const hoy = new Date();
                const diferencia = Math.ceil((fechaDevolucion - hoy) / (1000 * 3600 * 24)); // Diferencia en días

                if (diferencia > 7) {
                    $(this).addClass('text-verde');
                } else if (diferencia > 0) {
                    $(this).addClass('text-amarillo');
                } else {
                    $(this).addClass('text-rojo');
                }
            });

            // Función para seleccionar o desmarcar todos los checkboxes
            $('#seleccionar_todos').click(function() {
                const todosCheckboxes = $('.checkbox-producto');
                const todosSeleccionados = todosCheckboxes.filter(':checked').length === todosCheckboxes.length;

                // Si todos están seleccionados, desmarcar todos. Si no, seleccionarlos todos.
                todosCheckboxes.prop('checked', !todosSeleccionados);
            });

            // Acepta los préstamos seleccionados
            $('#aceptar_seleccionados').click(function() {
                const selectedIds = [];
                $('.checkbox-producto:checked').each(function() {
                    selectedIds.push($(this).data('id'));
                });

                if (selectedIds.length > 0) {
                    $.ajax({
                        url: '{{ path("procesar_aceptar") }}',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ ids: selectedIds }),
                        success: function(response) {
                            if (response.status === 'success') {
                                alert("Validado.");
                            }
                            location.reload(); // Recargar sin verificar la respuesta
                        },
                        error: function(xhr) {
                            if (xhr.responseJSON && xhr.responseJSON.errors) {
                                let errors = xhr.responseJSON.errors.join('<br>');
                                alert("Error: " + errors);
                            } 
                            else {
                                alert("Ha ocurrido un error inesperado.");
                            }
                        }
                    });
                } else {
                    alert('No has seleccionado ninguna solicitud.');
                }
            });

            $('#denegar_seleccionados').click(function() {
                const selectedIds = [];
                $('.checkbox-producto:checked').each(function() {
                    selectedIds.push($(this).data('id'));
                });

                if (selectedIds.length > 0) {
                    $.ajax({
                        url: '{{ path('procesar_denegar') }}',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ ids: selectedIds }),
                        success: function(response) {
                            // Manejo de la respuesta exitosa
                            console.log('Solicitud procesada:', response);
                            location.reload(); // Recargar sin verificar la respuesta
                        },
                        error: function(xhr) {
                            // Manejo de error
                            console.error('Error en la solicitud:', xhr);
                        }
                    });
                } else {
                    alert('No has seleccionado ninguna solicitud.');
                }
            });

            $('#devolver_material').click(function() {
                const selectedIds = [];
                $('.checkbox-producto:checked').each(function() {
                    selectedIds.push($(this).data('id'));
                });

                if (selectedIds.length > 0) {
                    $.ajax({
                        url: '{{ path('procesar_devolucion') }}',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ ids: selectedIds }),
                        success: function(response) {
                            // Manejo de la respuesta exitosa
                            console.log('Solicitud procesada:', response);
                            location.reload(); // Recargar sin verificar la respuesta
                        },
                        error: function(xhr) {
                            // Manejo de error
                            console.error('Error en la solicitud:', xhr);
                        }
                    });
                } else {
                    alert('No has seleccionado ninguna solicitud.');
                }
            });

            $('#aceptar_devoluciones').click(function() {
                const selectedIds = [];
                $('.checkbox-producto:checked').each(function() {
                    selectedIds.push($(this).data('id'));
                });

                if (selectedIds.length > 0) {
                    $.ajax({
                        url: '{{ path('procesar_confirmar_devolucion') }}',
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ ids: selectedIds }),
                        success: function(response) {
                            // Manejo de la respuesta exitosa
                            console.log('Solicitud procesada:', response);
                            location.reload(); // Recargar sin verificar la respuesta
                        },
                        error: function(xhr) {
                            // Manejo de error
                            console.error('Error en la solicitud:', xhr);
                        }
                    });
                } else {
                    alert('No has seleccionado ninguna solicitud.');
                }
            });

            // Evento del selector de estado
            $('.selector_estados select').on('change', function() {
                const estadoSeleccionado = $(this).val(); // Obtener el valor seleccionado en el dropdown
                $('tbody tr').each(function() {
                    const estadoFila = $(this).find("td:eq(8)").text().trim(); // Suponemos que el estado está en la columna 9 (índice 8)

                    if (estadoSeleccionado === "0") {
                        // Mostrar todas las filas si se selecciona "TODOS"
                        $(this).show();
                    } else {
                        // Comparar el valor seleccionado con el estado de la fila
                        if (estadoFila === obtenerEstado(estadoSeleccionado)) {
                            $(this).show();  // Mostrar la fila si coincide el estado
                        } else {
                            $(this).hide();  // Ocultar la fila si no coincide
                        }
                    }
                });
            });

            // Función para imprimir la página actual
            $('#boton-imprimir').click(function() {
                window.print(); // Abrir el diálogo de impresión del navegador
            });

            // Función para devolver el estado en texto en función del valor del selector
            function obtenerEstado(valor) {
                switch (valor) {
                    case "1":
                        return "ACEPTADO";
                    case "2":
                        return "DENEGADO";
                    case "3":
                        return "EN ESPERA";
                    case "4":
                        return "ESPERA DEVOLUCION";
                    case "5":
                        return "DEVUELTO";
                    default:
                        return "";
                }
            }
        });
    </script>
</body>
</html>